@model IEnumerable<PharmacyWebSite.Models.Medicine>

@{
    ViewData["Title"] = "Our Medicines";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container py-5">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="display-6 fw-bold text-primary">Our Medicines</h1>
        @if (User.IsInRole("Admin"))
        {
            <a asp-action="Create" class="btn btn-primary">
                <i class="bi bi-plus-circle"></i> Add New Medicine
            </a>
        }
    </div>

    <div class="row mb-4">
        <div class="col-md-6">
            <form asp-action="Index" method="get">
                <div class="input-group">
                    <input type="text" class="form-control" name="searchString"
                           placeholder="Search medicines..." value="@ViewData["CurrentFilter"]" />
                    <button class="btn btn-outline-secondary" type="submit">
                        <i class="bi bi-search"></i>
                    </button>
                </div>
            </form>
        </div>
        <div class="col-md-6">
            <form asp-action="Index" method="get">
                <div class="input-group">
                    <select class="form-select" name="categoryFilter" onchange="this.form.submit()">
                        <option value="">All Categories</option>
                        @foreach (var category in ViewBag.Categories)
                        {
                            <option value="@category">@category</option>
                        }
                    </select>
                </div>
            </form>
        </div>
    </div>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (!Model.Any())
    {
        <div class="alert alert-info">
            No medicines found matching your criteria.
        </div>
    }
    else
    {
        <div class="row row-cols-1 row-cols-md-3 g-4">
            @foreach (var item in Model)
            {
                <div class="col">
                    <div class="card h-100 shadow-sm">
                        <div class="position-relative">
                            <img src="@item.ImagePath" class="card-img-top medicine-image"
                                 alt="@item.Name" onerror="this.src='/images/med-placeholder.png'">
                            <span class="badge bg-success position-absolute top-0 end-0 m-2">
                                @item.Stock in stock
                            </span>
                        </div>
                        <div class="card-body">
                            <h5 class="card-title">@item.Name</h5>
                            <p class="card-text text-muted">@item.Description</p>
                            <div class="d-flex justify-content-between align-items-center">
                                <span class="h5 text-primary">@item.Price.ToString("C")</span>
                                <span class="badge bg-info">@item.Category</span>
                            </div>
                        </div>
                        <div class="card-footer bg-white">
                            <div class="d-flex justify-content-between align-items-center">
                                <a asp-action="Details" asp-route-id="@item.Id"
                                   class="btn btn-sm btn-outline-primary">
                                    <i class="bi bi-eye"></i> Details
                                </a>

                                @if (User.IsInRole("Admin"))
                                {
                                    <div>
                                        <a asp-action="Edit" asp-route-id="@item.Id"
                                           class="btn btn-sm btn-outline-secondary">
                                            <i class="bi bi-pencil"></i>
                                        </a>
                                        <a asp-action="Delete" asp-route-id="@item.Id"
                                           class="btn btn-sm btn-outline-danger">
                                            <i class="bi bi-trash"></i>
                                        </a>
                                    </div>
                                }
                                else
                                {
                                    <form asp-controller="Cart" asp-action="AddToCart" method="post" class="ms-2 add-to-cart-form">
                                        @Html.AntiForgeryToken()
                                        <input type="hidden" name="medicineId" value="@item.Id" />
                                        <div class="input-group input-group-sm" style="width: 140px;">
                                            <input type="number" name="quantity" value="1" min="1" max="@item.Stock"
                                                   class="form-control" />
                                            <button type="submit" class="btn btn-success">
                                                <i class="bi bi-cart-plus"></i> Add
                                            </button>
                                        </div>
                                    </form>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

@section Styles {
    <style>
        .medicine-image {
            height: 200px;
            object-fit: cover;
            border-bottom: 1px solid rgba(0,0,0,0.1);
        }

        .card {
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            border-radius: 10px;
            overflow: hidden;
        }

            .card:hover {
                transform: translateY(-5px);
                box-shadow: 0 10px 20px rgba(0,0,0,0.1);
            }

        .input-group-sm {
            max-width: 180px;
        }
    </style>
}

@section Scripts {
    <script>
        document.querySelectorAll('.add-to-cart-form').forEach(form => {
            form.addEventListener('submit', async function(e) {
                e.preventDefault();

                const submitBtn = this.querySelector('button[type="submit"]');
                const originalHtml = submitBtn.innerHTML;
                submitBtn.disabled = true;
                submitBtn.innerHTML = '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>';

                try {
                    const formData = new FormData(this);
                    const response = await fetch(this.action, {
                        method: 'POST',
                        headers: {
                            'Accept': 'application/json',
                            'X-Requested-With': 'XMLHttpRequest'
                        },
                        body: formData
                    });

                    const result = await response.json();

                    if (result.success) {
                        // Update cart count
                        document.dispatchEvent(new Event('cartUpdated'));

                        // Show success message
                        const toast = new bootstrap.Toast(document.getElementById('addedToCartToast'));
                        document.querySelector('.toast-body').textContent = result.message;
                        toast.show();
                    } else {
                        // Show error message
                        const toast = new bootstrap.Toast(document.getElementById('addedToCartToast'));
                        document.querySelector('.toast-header').className = 'toast-header bg-danger text-white';
                        document.querySelector('.toast-body').textContent = result.message;
                        toast.show();
                    }
                } catch (error) {
                    console.error('Error:', error);
                    const toast = new bootstrap.Toast(document.getElementById('addedToCartToast'));
                    document.querySelector('.toast-header').className = 'toast-header bg-danger text-white';
                    document.querySelector('.toast-body').textContent = 'An error occurred while adding to cart';
                    toast.show();
                } finally {
                    submitBtn.disabled = false;
                    submitBtn.innerHTML = originalHtml;
                }
            });
        });
    </script>
}